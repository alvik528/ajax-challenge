"use strict";
/*
    app.js, main Angular application script
    define your module and controllers here
*/
var reviewsUrl = 'https://api.parse.com/1/classes/reviews';

angular.module('ReviewApp', ['ui.bootstrap'])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'A5116q6Vl2sqkktZ6tnyxHRqsrP41NmP4D9gi32A';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'DbeWRdSqZpZbABCAFMGvs5azsURletVmAGz5yHJr';
        //data-urlencode 
    })
    .controller('ReviewController', function($scope,$http) {
        $scope.order = '-votes';       
        $scope.refreshReviews = function() {
            $scope.loading = true;
            $http.get(reviewsUrl/*, {params: {where: '{"deleted":false}'}, order: '{"-votes"}'}) */ + '?where= {"deleted":false}&order=-votes')
                .success(function(data) {
                   $scope.reviews = data.results;
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                })
                .finally(function() {
                    $scope.loading = false;
                });
        };

        $scope.refreshReviews();

        $scope.newReview = {deleted: false};
        $scope.newReview.votes = 0;

        $scope.addReview = function() {
            //$scope.max = 100;
            //$scope.dynamic = 0;
            $scope.inserting = true;
            $http.post(reviewsUrl, $scope.newReview)
                .success(function(responseData) {
                   $scope.newReview.objectId = responseData.objectId;
                   $scope.reviews.push($scope.newReview);
                   $scope.newReview = {deleted: false};
                   $scope.newReview.votes = 0;
                   //$scope.dynamic = 100;
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                })
                .finally(function() {
                    $scope.inserting = false;
                    //$scope.dynamic = 0;
                });

        };

        $scope.updateReview = function(review) {
            $http.put(reviewsUrl + '/' + review.objectId, review)
                .success(function() {
                    $scope.deleted = false;
                })
                .error(function(err){
                   $scope.errorMessage = err;
                })
                .finally(function() {
                    $scope.updating = false;
                });
        };
        $scope.deleteReview = function(review) {
            if (review.deleted) {
                return;
            }
            review.deleted = true;
            $http.delete(reviewsUrl + '/' + review.objectId) 
                .success(function(data) {
                    review.deleted = true;
                    $scope.deleted = true;
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                })
        };

        $scope.incrementVotes = function(review, amount) {
            if (review.deleted || (review.votes == 0 && amount == -1)) {
                return;
            }
            $http.put(reviewsUrl + '/' + review.objectId, {
                votes: {
                    __op: 'Increment',
                    amount: amount
                }
            })
                .success(function(responseData) {
                    console.log(responseData);
                    review.votes = responseData.votes;
                })
                .error(function(err) {
                    console.log(err);
                })
                .finally(function() {
                    $scope.updating= false;
                })
        };//incrementVotes()
    });